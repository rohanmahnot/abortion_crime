averages <- aggregate(data$ContractAmount,by=list(data$AgencyName),mean)
averages <- averages[averages$Group.1 %in% top5,]
averages <- averages[order(-averages$x),]
#Output 2
averages$x[1]/averages$x[2]
remove(averages)
## 3
citywide <- data[data$AgencyName == top5[1],]
unique_vendors <- aggregate(citywide$ContractAmount,by=list(citywide$VendorName),sum)
number <- aggregate(citywide$RequestID,by=list(citywide$VendorName),length)
unique_vendors <- merge(unique_vendors,number,by="Group.1")
remove(number)
names(unique_vendors) <- c("Vendor","ContractAmount","NumberOfContracts")
unique_vendors <- unique_vendors[order(-unique_vendors$ContractAmount),]
#Output 3
sum(unique_vendors$NumberOfContracts[1:100])/nrow(citywide)
remove(citywide)
remove(unique_vendors)
remove(top5)
## 4
weekdays_pnr <- subset(data, AgencyName == "Parks and Recreation", select=c("AgencyName","StartDate"))
weekdays_pnr$weekday <- weekdays(weekdays_pnr$StartDate)
chi_data <- aggregate(weekdays_pnr$weekday,by = list(weekdays_pnr$weekday), FUN=length)
chi_data$expected <- c(1/5)
#Output 4
chisq.test(chi_data$x, p=chi_data$expected)
remove(chi_data)
remove(weekdays_pnr)
## 5
construction <- data[(data$CategoryDescription=="Construction Related Services") | (data$CategoryDescription=="Construction/Construction Services"),]
central_park <- sum(construction[grepl("CENTRAL PARK?$|CENTRAL PARK ", construction$ShortTitle),]$ContractAmount)
wash_park <- sum(construction[grepl("WASHINGTON SQUARE PARK", construction$ShortTitle),]$ContractAmount)
#Output 5
central_park/wash_park
remove(construction)
remove(central_park)
remove(wash_park)
## 6
agency <- names(sort(table(data$AgencyName),decreasing=T))
m <- 6 #choose agency, Env_prot = 6
paste("Agency -",agency[m])
subset_6 <- subset(data, select=c("StartDate","ContractAmount","AgencyName"))
subset_6$Month <- month(subset_6$StartDate)
subset_6$Year <- year(subset_6$StartDate)
monthly <- aggregate(ContractAmount ~ AgencyName+Year+Month,subset_6,FUN = sum)
monthly <- monthly[order(monthly$Year,monthly$Month),]
agency <- monthly[monthly$AgencyName == agency[m],]
wide <- reshape(data=agency,idvar=c("Month","AgencyName"),v.names="ContractAmount",timevar="Year",direction="wide")
if (nrow(wide)==12){
long <- reshape(data=wide,idvar=c("Month","AgencyName"),v.names="ContractAmount",timevar="Year",times=2010:2019,direction="long")
rownames(long) <- c()
long <- long[order(long$Year,long$Month),]
#Output 6
acf(long$ContractAmount, lag.max=12, plot=F ,na.action = na.pass)[12]
} else {print("cannot be autocorrelated, not enough data")}
remove(agency)
remove(long)
remove(monthly)
remove(subset_6)
remove(wide)
remove(m)
## 7
subset_7 <- data[(data$AgencyName=="Citywide Administrative Services") & (data$CategoryDescription=="Goods"),]
yearly <- aggregate(ContractAmount ~ year(StartDate),subset_7,FUN=sum)
names(yearly)<-c("year","amount")
#Output 7
summary(lm(amount ~ year, data = yearly))
remove(subset_7)
remove(yearly)
## 8
subset_8 <- data[year(data$StartDate)==2018,]
subset_8 <- subset(subset_8,select=c("VendorAddress","ContractAmount"))
subset_8$ZipCode <- gsub(regmatches(as.character(subset_8$VendorAddress),gregexpr('[0-9]{5}(-[0-9]{4})?(?!.*[0-9]{5}(-[0-9]{4})?)', as.character(subset_8$VendorAddress), perl = TRUE)), pattern="-[0-9]{0,4}", replacement = "")
subset_8$ZipCode[subset_8$ZipCode=="character(0)"] <-NA
subset_8 <- subset_8[complete.cases(subset_8),]
url <- "https://www.health.ny.gov/statistics/cancer/registry/appendix/neighborhoods.htm"
x <- html_text(html_nodes(xml2::read_html(url),css="tr~ tr+ tr td+ td , td~ td+ td"))
x <- unlist(strsplit(x,split=" "))
y <- unlist(regmatches(x,gregexpr('[0-9]{5}(-[0-9]{4})?(?!.*[0-9]{5}(-[0-9]{4})?)',x, perl = TRUE)))
subset_8$inNYC <- subset_8$ZipCode %in% y
NYC <- aggregate(ContractAmount ~ inNYC, subset_8, FUN=sum)
#Output 8
NYC$ContractAmount[NYC$inNYC==T]/sum(NYC$ContractAmount)
remove(NYC)
remove(subset_8)
remove(x)
remove(y)
remove(url)
remove(data)
##Save markdown as R script
knitr::purl("Rmd file.Rmd")
#Initialization
library(lubridate)
library(rvest)
data <- data.frame(read.csv("https://data.cityofnewyork.us/api/views/qyyg-4tf5/rows.csv"))
## 1
#Convert dates to date format
data$StartDate <- mdy(data$StartDate)
#Select only those between 2010 and 2019
data <- data[(year(data$StartDate)>=2010) & (year(data$StartDate)<=2019),]
#Remove negative and missing values in contract amount
data <- data[(data$ContractAmount>0) & !is.na(data$ContractAmount),]
#Output 1
print(sum(data$ContractAmount))
## 2
#Top 5 agencies in terms of number of contracts
top5 <- names(sort(table(data$AgencyName),decreasing=T))[1:5]
#Aggregating mean amount for every agency
averages <- aggregate(data$ContractAmount,by=list(data$AgencyName),mean)
#Taking only top 5 agencies
averages <- averages[averages$Group.1 %in% top5,]
averages <- averages[order(-averages$x),]
#Output 2
averages$x[1]/averages$x[2]
#Remove objects pertaining to this task
remove(averages)
## 3
#Taking citywide subset
citywide <- data[data$AgencyName == top5[1],]
#Aggregating sum of contract amount for every vendor
unique_vendors <- aggregate(citywide$ContractAmount,by=list(citywide$VendorName),sum)
#Number of contracts per vendor
number <- aggregate(citywide$RequestID,by=list(citywide$VendorName),length)
#Merge the data frames
unique_vendors <- merge(unique_vendors,number,by="Group.1")
#Change names
names(unique_vendors) <- c("Vendor","ContractAmount","NumberOfContracts")
#Re-order
unique_vendors <- unique_vendors[order(-unique_vendors$ContractAmount),]
#Output 3
sum(unique_vendors$NumberOfContracts[1:100])/nrow(citywide)
#Remove objects pertaining to this task
remove(number)
remove(citywide)
remove(unique_vendors)
remove(top5)
## 4
#subset for Parks and Rec
weekdays_pnr <- subset(data, AgencyName == "Parks and Recreation", select=c("AgencyName","StartDate"))
#Convert dates to weekday format using lubridate::weekdays function
weekdays_pnr$weekday <- weekdays(weekdays_pnr$StartDate)
#Aggregate total number of contracts published per weekday
chi_data <- aggregate(weekdays_pnr$weekday,by = list(weekdays_pnr$weekday), FUN=length)
#Add null hypothesis probabilities
chi_data$expected <- c(1/5)
#Output 4
chisq.test(chi_data$x, p=chi_data$expected)
#Remove objects pertaining to this task
remove(chi_data)
remove(weekdays_pnr)
## 5
#Subset construction category
construction <- data[(data$CategoryDescription=="Construction Related Services") | (data$CategoryDescription=="Construction/Construction Services"),]
#Regular expression to extract central park
central_park <- sum(construction[grepl("CENTRAL PARK?$|CENTRAL PARK ", construction$ShortTitle),]$ContractAmount)
#Regular expression to extract washington sq park
wash_park <- sum(construction[grepl("WASHINGTON SQUARE PARK", construction$ShortTitle),]$ContractAmount)
#Output 5
central_park/wash_park
#Remove objects pertaining to this task
remove(construction)
remove(central_park)
remove(wash_park)
## 6
#List of all agencies
agency <- names(sort(table(data$AgencyName),decreasing=T))
#choose agency (Env_prot = 6)
m <- 6
#Print namde of agency chosen
paste("Agency -",agency[m])
#Subset of particular agency
subset_6 <- subset(data, select=c("StartDate","ContractAmount","AgencyName"))
#Create month and year columns
subset_6$Month <- month(subset_6$StartDate)
subset_6$Year <- year(subset_6$StartDate)
#Aggregate monthly expenditure for each agency
monthly <- aggregate(ContractAmount ~ AgencyName+Year+Month,subset_6,FUN = sum)
monthly <- monthly[order(monthly$Year,monthly$Month),]
#Subset of agency chosen before
agency <- monthly[monthly$AgencyName == agency[m],]
#convert to wide format to incorporate missing months
wide <- reshape(data=agency,idvar=c("Month","AgencyName"),v.names="ContractAmount",timevar="Year",direction="wide")
#If data is sufficient, convert back to long format - time series - for autocorrelation
if (nrow(wide)==12){
long <- reshape(data=wide,idvar=c("Month","AgencyName"),v.names="ContractAmount",timevar="Year",times=2010:2019,direction="long")
rownames(long) <- c()
long <- long[order(long$Year,long$Month),]
#Output 6
acf(long$ContractAmount, lag.max=12, plot=F ,na.action = na.pass)[12]
} else {print("cannot be autocorrelated, not enough data")}
#Remove objects pertaining to this task
remove(agency)
remove(long)
remove(monthly)
remove(subset_6)
remove(wide)
remove(m)
## 7
#Subset of citywide agency and goods category
subset_7 <- data[(data$AgencyName=="Citywide Administrative Services") & (data$CategoryDescription=="Goods"),]
#Aggregating yearly expenditure
yearly <- aggregate(ContractAmount ~ year(StartDate),subset_7,FUN=sum)
#Renaming
names(yearly)<-c("year","amount")
#Output 7
summary(lm(amount ~ year, data = yearly))
#Remove objects pertaining to this task
remove(subset_7)
remove(yearly)
## 8
#Subset for 2018 contracts
subset_8 <- data[year(data$StartDate)==2018,]
#Select only address and amount
subset_8 <- subset(subset_8,select=c("VendorAddress","ContractAmount"))
#Extract zipcodes using regular expression
subset_8$ZipCode <- gsub(regmatches(as.character(subset_8$VendorAddress),gregexpr('[0-9]{5}(-[0-9]{4})?(?!.*[0-9]{5}(-[0-9]{4})?)', as.character(subset_8$VendorAddress), perl = TRUE)), pattern="-[0-9]{0,4}", replacement = "")
#Replace with missing values
subset_8$ZipCode[subset_8$ZipCode=="character(0)"] <-NA
#Ignore addresses without a zip code
subset_8 <- subset_8[complete.cases(subset_8),]
#Url for NYC zip codes
url <- "https://www.health.ny.gov/statistics/cancer/registry/appendix/neighborhoods.htm"
#Scrape out zip codes
x <- html_text(html_nodes(xml2::read_html(url),css="tr~ tr+ tr td+ td , td~ td+ td"))
x <- unlist(strsplit(x,split=" "))
#Extract 5 digit zip codes
y <- unlist(regmatches(x,gregexpr('[0-9]{5}(-[0-9]{4})?(?!.*[0-9]{5}(-[0-9]{4})?)',x, perl = TRUE)))
#Create logical column for subset, if zip code in NYC then TRUE, else FALSE
subset_8$inNYC <- subset_8$ZipCode %in% y
#Create dataframe to aggregate NYC zip codes v/s non-NYC zip-codes
NYC <- aggregate(ContractAmount ~ inNYC, subset_8, FUN=sum)
#Output 8
NYC$ContractAmount[NYC$inNYC==T]/sum(NYC$ContractAmount)
#Remove objects pertaining to this task
remove(NYC)
remove(subset_8)
remove(x)
remove(y)
remove(url)
remove(data)
##Save markdown as R script
knitr::purl("Rmd file.Rmd")
cd
cd()
cd ..
ls
wkdir
dir
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
View(crime)
aggregate(Index.Total ~ Year, data = crime, FUN = sum)
View(crime)
aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
View(crime_agg)
abortion <- read.csv("abortion_total.csv")
View(abortion)
format(abortion)
type(abortion)
sum(abortion)
summary(abortion)
table(abortion)
abortion$abortions <- as.numeric(abortion$abortions)
abortion <- read.csv("abortion_total.csv")
abortion$abortions <- as.integer(abortion$abortions)
abortion <- read.csv("abortion_total.csv")
abortion$abortions <- as.character(abortion$abortions)
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
abortion$abortions <- as.numeric(abortion$abortions)
abortion <- read.csv("abortion_total.csv")
abortion$abortions <- as.character(abortion$abortions)
abortion$abortions <- as.integer(abortion$abortions)
abortion <- read.csv("abortion_total.csv")
abortion$abortions <- as.character(abortion$abortions)
abortion <- read.csv("abortion_total.csv")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
crime_agg$year <- crime_agg$year-20
sweep(crime_agg$year,20)
?sweep
crime_agg$year <- crime_agg$year - c(20*29)
c(20*29)
c(20**29)
rep(20,20)
rep(20,29)
crime_agg$year <- crime_agg$year - rep(20,29)
crime_agg$year
crime_agg$Year
rep(20,29)
crime_agg$Year <- crime_agg$Year - rep(20,29)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,29)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
?merge
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Shifted_Year", "Abortions")
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
abortions$Shifted_Year <- abortions$Year
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
abortion$Shifted_Year <- abortions$Year
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
abortion$Shifted_Year <- abortion$Year
crime_agg <- aggregate(as.numeric(Index.Total)~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
merge(crime_agg,abortion,by = c("Shifted_Year"))
merged <- merge(crime_agg,abortion,by = c("Shifted_Year"))
View(merged)
merged <- merge(abortion,crime_agg,by = c("Shifted_Year"))
remove(merged$Year.x)
merged <- merged[-c(2)]
names(merged) <- c("Abortion_Year","Abortions","Crime_Year","Crimes")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Some cleaning and merging
abortion$Shifted_Year <- abortion$Year
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
merged <- merge(abortion,crime_agg,by = c("Shifted_Year"))
merged <- merged[-c(2)]
names(merged) <- c("Abortion_Year","Abortions","Crime_Year","Crimes")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
View(crime_agg)
View(abortion)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Some cleaning and merging
abortion$Shifted_Year <- abortion$Year
crime_agg$Shifted_Year <- crime_agg$Year - rep(20,nrow(crime_agg))
merged <- merge(abortion,crime_agg,by = c("Shifted_Year"))
merged <- merged[-c(2)]
names(merged) <- c("Abortion_Year","Abortions","Crime_Year","Crimes")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
View(population)
merged <- merge(abortion,crime_agg,by = c("Year"))
View(merged)
?merged
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year")=,all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
#Rates
attach(merged)
Abortion_Rate <- 100000*Abortion_Rate/Population
Abortion_Rate <- 100000*Abortions/Population
merged$Abortion_Rate <- 100000*Abortions/Population
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
#Rates
attach(merged)
merged$Crime_Rate <- 100000*Total_Crimes/Population
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion_total.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
#Rates
merged$Crime_Rate <- 100000*merged$Total_Crimes/merged$Population
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
#Rates
merged$Crime_Rate <- 100000*merged$Total_Crimes/merged$Population
#Save
write.csv("Merged_Data.csv")
?write.csv
#Save
write.csv(merged,"Merged_Data.csv")
#Save
write.csv(merged,"Merged_Data.csv",na="")
#Save
write.csv(merged,"Merged_Data.csv",na="",row.names = F)
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
setwd("~/OneDrive/My Drive/Data Incubator/abortion_crime")
##Import csv
crime <- read.csv("crime.csv")
abortion <- read.csv("abortion.csv")
names(abortion) <- c("Year", "Abortions")
population <- read.csv("ny state pop.csv")
#Crime total per year
crime_agg <- aggregate(as.numeric(Index.Total) ~ Year, data = crime, FUN = sum)
names(crime_agg) <- c("Year","Total_Crimes")
#Merging
merged <- merge(abortion,crime_agg,by = c("Year"),all=T)
merged <- merge(merged,population,by=c("Year"),all=T)
#Rates
merged$Crime_Rate <- 100000*merged$Total_Crimes/merged$Population
#Save
write.csv(merged,"Merged_Data.csv",na="",row.names = F)
